// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: pkg/proto/raftpb/raft.proto

package raftpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Term          int32                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Command       []byte                 `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_pkg_proto_raftpb_raft_proto_rawDescGZIP(), []int{0}
}

func (x *LogEntry) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *LogEntry) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetCommand() []byte {
	if x != nil {
		return x.Command
	}
	return nil
}

type PersistentState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentTerm   int32                  `protobuf:"varint,1,opt,name=current_term,json=currentTerm,proto3" json:"current_term,omitempty"`
	VoteFor       int32                  `protobuf:"varint,2,opt,name=vote_for,json=voteFor,proto3" json:"vote_for,omitempty"`
	Logs          []*LogEntry            `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PersistentState) Reset() {
	*x = PersistentState{}
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PersistentState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersistentState) ProtoMessage() {}

func (x *PersistentState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersistentState.ProtoReflect.Descriptor instead.
func (*PersistentState) Descriptor() ([]byte, []int) {
	return file_pkg_proto_raftpb_raft_proto_rawDescGZIP(), []int{1}
}

func (x *PersistentState) GetCurrentTerm() int32 {
	if x != nil {
		return x.CurrentTerm
	}
	return 0
}

func (x *PersistentState) GetVoteFor() int32 {
	if x != nil {
		return x.VoteFor
	}
	return 0
}

func (x *PersistentState) GetLogs() []*LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

// 新增：Raft RPC 消息
type RequestVoteArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId   int32                  `protobuf:"varint,2,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	LastLogIndex  int32                  `protobuf:"varint,3,opt,name=last_log_index,json=lastLogIndex,proto3" json:"last_log_index,omitempty"`
	LastLogTerm   int32                  `protobuf:"varint,4,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteArgs) Reset() {
	*x = RequestVoteArgs{}
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteArgs) ProtoMessage() {}

func (x *RequestVoteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteArgs.ProtoReflect.Descriptor instead.
func (*RequestVoteArgs) Descriptor() ([]byte, []int) {
	return file_pkg_proto_raftpb_raft_proto_rawDescGZIP(), []int{2}
}

func (x *RequestVoteArgs) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteArgs) GetCandidateId() int32 {
	if x != nil {
		return x.CandidateId
	}
	return 0
}

func (x *RequestVoteArgs) GetLastLogIndex() int32 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestVoteArgs) GetLastLogTerm() int32 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type RequestVoteReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,2,opt,name=vote_granted,json=voteGranted,proto3" json:"vote_granted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteReply) Reset() {
	*x = RequestVoteReply{}
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteReply) ProtoMessage() {}

func (x *RequestVoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteReply.ProtoReflect.Descriptor instead.
func (*RequestVoteReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_raftpb_raft_proto_rawDescGZIP(), []int{3}
}

func (x *RequestVoteReply) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteReply) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

type AppendEntriesArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId      int32                  `protobuf:"varint,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	PrevLogIndex  int32                  `protobuf:"varint,3,opt,name=prev_log_index,json=prevLogIndex,proto3" json:"prev_log_index,omitempty"`
	PrevLogTerm   int32                  `protobuf:"varint,4,opt,name=prev_log_term,json=prevLogTerm,proto3" json:"prev_log_term,omitempty"`
	Entries       []*LogEntry            `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit  int32                  `protobuf:"varint,6,opt,name=leader_commit,json=leaderCommit,proto3" json:"leader_commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesArgs) Reset() {
	*x = AppendEntriesArgs{}
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesArgs) ProtoMessage() {}

func (x *AppendEntriesArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesArgs.ProtoReflect.Descriptor instead.
func (*AppendEntriesArgs) Descriptor() ([]byte, []int) {
	return file_pkg_proto_raftpb_raft_proto_rawDescGZIP(), []int{4}
}

func (x *AppendEntriesArgs) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesArgs) GetLeaderId() int32 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *AppendEntriesArgs) GetPrevLogIndex() int32 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntriesArgs) GetPrevLogTerm() int32 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesArgs) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntriesArgs) GetLeaderCommit() int32 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

type AppendEntriesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XTerm         int32                  `protobuf:"varint,3,opt,name=x_term,json=xTerm,proto3" json:"x_term,omitempty"`
	XIndex        int32                  `protobuf:"varint,4,opt,name=x_index,json=xIndex,proto3" json:"x_index,omitempty"`
	XLen          int32                  `protobuf:"varint,5,opt,name=x_len,json=xLen,proto3" json:"x_len,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesReply) Reset() {
	*x = AppendEntriesReply{}
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesReply) ProtoMessage() {}

func (x *AppendEntriesReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesReply.ProtoReflect.Descriptor instead.
func (*AppendEntriesReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_raftpb_raft_proto_rawDescGZIP(), []int{5}
}

func (x *AppendEntriesReply) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppendEntriesReply) GetXTerm() int32 {
	if x != nil {
		return x.XTerm
	}
	return 0
}

func (x *AppendEntriesReply) GetXIndex() int32 {
	if x != nil {
		return x.XIndex
	}
	return 0
}

func (x *AppendEntriesReply) GetXLen() int32 {
	if x != nil {
		return x.XLen
	}
	return 0
}

type InstallSnapshotArgs struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Term              int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderId          int32                  `protobuf:"varint,2,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LastIncludedIndex int32                  `protobuf:"varint,3,opt,name=last_included_index,json=lastIncludedIndex,proto3" json:"last_included_index,omitempty"`
	LastIncludedTerm  int32                  `protobuf:"varint,4,opt,name=last_included_term,json=lastIncludedTerm,proto3" json:"last_included_term,omitempty"`
	Data              []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *InstallSnapshotArgs) Reset() {
	*x = InstallSnapshotArgs{}
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotArgs) ProtoMessage() {}

func (x *InstallSnapshotArgs) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotArgs.ProtoReflect.Descriptor instead.
func (*InstallSnapshotArgs) Descriptor() ([]byte, []int) {
	return file_pkg_proto_raftpb_raft_proto_rawDescGZIP(), []int{6}
}

func (x *InstallSnapshotArgs) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *InstallSnapshotArgs) GetLeaderId() int32 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

func (x *InstallSnapshotArgs) GetLastIncludedIndex() int32 {
	if x != nil {
		return x.LastIncludedIndex
	}
	return 0
}

func (x *InstallSnapshotArgs) GetLastIncludedTerm() int32 {
	if x != nil {
		return x.LastIncludedTerm
	}
	return 0
}

func (x *InstallSnapshotArgs) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type InstallSnapshotReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallSnapshotReply) Reset() {
	*x = InstallSnapshotReply{}
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSnapshotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSnapshotReply) ProtoMessage() {}

func (x *InstallSnapshotReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_raftpb_raft_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallSnapshotReply.ProtoReflect.Descriptor instead.
func (*InstallSnapshotReply) Descriptor() ([]byte, []int) {
	return file_pkg_proto_raftpb_raft_proto_rawDescGZIP(), []int{7}
}

func (x *InstallSnapshotReply) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

var File_pkg_proto_raftpb_raft_proto protoreflect.FileDescriptor

const file_pkg_proto_raftpb_raft_proto_rawDesc = "" +
	"\n" +
	"\x1bpkg/proto/raftpb/raft.proto\x12\x06raftpb\"N\n" +
	"\bLogEntry\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x05R\x04term\x12\x18\n" +
	"\acommand\x18\x03 \x01(\fR\acommand\"u\n" +
	"\x0fPersistentState\x12!\n" +
	"\fcurrent_term\x18\x01 \x01(\x05R\vcurrentTerm\x12\x19\n" +
	"\bvote_for\x18\x02 \x01(\x05R\avoteFor\x12$\n" +
	"\x04logs\x18\x03 \x03(\v2\x10.raftpb.LogEntryR\x04logs\"\x92\x01\n" +
	"\x0fRequestVoteArgs\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term\x12!\n" +
	"\fcandidate_id\x18\x02 \x01(\x05R\vcandidateId\x12$\n" +
	"\x0elast_log_index\x18\x03 \x01(\x05R\flastLogIndex\x12\"\n" +
	"\rlast_log_term\x18\x04 \x01(\x05R\vlastLogTerm\"I\n" +
	"\x10RequestVoteReply\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term\x12!\n" +
	"\fvote_granted\x18\x02 \x01(\bR\vvoteGranted\"\xdf\x01\n" +
	"\x11AppendEntriesArgs\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\x05R\bleaderId\x12$\n" +
	"\x0eprev_log_index\x18\x03 \x01(\x05R\fprevLogIndex\x12\"\n" +
	"\rprev_log_term\x18\x04 \x01(\x05R\vprevLogTerm\x12*\n" +
	"\aentries\x18\x05 \x03(\v2\x10.raftpb.LogEntryR\aentries\x12#\n" +
	"\rleader_commit\x18\x06 \x01(\x05R\fleaderCommit\"\x87\x01\n" +
	"\x12AppendEntriesReply\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x15\n" +
	"\x06x_term\x18\x03 \x01(\x05R\x05xTerm\x12\x17\n" +
	"\ax_index\x18\x04 \x01(\x05R\x06xIndex\x12\x13\n" +
	"\x05x_len\x18\x05 \x01(\x05R\x04xLen\"\xb8\x01\n" +
	"\x13InstallSnapshotArgs\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term\x12\x1b\n" +
	"\tleader_id\x18\x02 \x01(\x05R\bleaderId\x12.\n" +
	"\x13last_included_index\x18\x03 \x01(\x05R\x11lastIncludedIndex\x12,\n" +
	"\x12last_included_term\x18\x04 \x01(\x05R\x10lastIncludedTerm\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\"*\n" +
	"\x14InstallSnapshotReply\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term2\xe5\x01\n" +
	"\vRaftService\x12@\n" +
	"\vRequestVote\x12\x17.raftpb.RequestVoteArgs\x1a\x18.raftpb.RequestVoteReply\x12F\n" +
	"\rAppendEntries\x12\x19.raftpb.AppendEntriesArgs\x1a\x1a.raftpb.AppendEntriesReply\x12L\n" +
	"\x0fInstallSnapshot\x12\x1b.raftpb.InstallSnapshotArgs\x1a\x1c.raftpb.InstallSnapshotReplyB\x0fZ\rkv/pkg/raftpbb\x06proto3"

var (
	file_pkg_proto_raftpb_raft_proto_rawDescOnce sync.Once
	file_pkg_proto_raftpb_raft_proto_rawDescData []byte
)

func file_pkg_proto_raftpb_raft_proto_rawDescGZIP() []byte {
	file_pkg_proto_raftpb_raft_proto_rawDescOnce.Do(func() {
		file_pkg_proto_raftpb_raft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_raftpb_raft_proto_rawDesc), len(file_pkg_proto_raftpb_raft_proto_rawDesc)))
	})
	return file_pkg_proto_raftpb_raft_proto_rawDescData
}

var file_pkg_proto_raftpb_raft_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pkg_proto_raftpb_raft_proto_goTypes = []any{
	(*LogEntry)(nil),             // 0: raftpb.LogEntry
	(*PersistentState)(nil),      // 1: raftpb.PersistentState
	(*RequestVoteArgs)(nil),      // 2: raftpb.RequestVoteArgs
	(*RequestVoteReply)(nil),     // 3: raftpb.RequestVoteReply
	(*AppendEntriesArgs)(nil),    // 4: raftpb.AppendEntriesArgs
	(*AppendEntriesReply)(nil),   // 5: raftpb.AppendEntriesReply
	(*InstallSnapshotArgs)(nil),  // 6: raftpb.InstallSnapshotArgs
	(*InstallSnapshotReply)(nil), // 7: raftpb.InstallSnapshotReply
}
var file_pkg_proto_raftpb_raft_proto_depIdxs = []int32{
	0, // 0: raftpb.PersistentState.logs:type_name -> raftpb.LogEntry
	0, // 1: raftpb.AppendEntriesArgs.entries:type_name -> raftpb.LogEntry
	2, // 2: raftpb.RaftService.RequestVote:input_type -> raftpb.RequestVoteArgs
	4, // 3: raftpb.RaftService.AppendEntries:input_type -> raftpb.AppendEntriesArgs
	6, // 4: raftpb.RaftService.InstallSnapshot:input_type -> raftpb.InstallSnapshotArgs
	3, // 5: raftpb.RaftService.RequestVote:output_type -> raftpb.RequestVoteReply
	5, // 6: raftpb.RaftService.AppendEntries:output_type -> raftpb.AppendEntriesReply
	7, // 7: raftpb.RaftService.InstallSnapshot:output_type -> raftpb.InstallSnapshotReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_proto_raftpb_raft_proto_init() }
func file_pkg_proto_raftpb_raft_proto_init() {
	if File_pkg_proto_raftpb_raft_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_raftpb_raft_proto_rawDesc), len(file_pkg_proto_raftpb_raft_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_raftpb_raft_proto_goTypes,
		DependencyIndexes: file_pkg_proto_raftpb_raft_proto_depIdxs,
		MessageInfos:      file_pkg_proto_raftpb_raft_proto_msgTypes,
	}.Build()
	File_pkg_proto_raftpb_raft_proto = out.File
	file_pkg_proto_raftpb_raft_proto_goTypes = nil
	file_pkg_proto_raftpb_raft_proto_depIdxs = nil
}
