// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: pkg/kvpb/mvcc.proto

package kvpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 版本信息
type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Main          int64                  `protobuf:"varint,1,opt,name=main,proto3" json:"main,omitempty"` // 主版本号（单调递增）
	Sub           int64                  `protobuf:"varint,2,opt,name=sub,proto3" json:"sub,omitempty"`   // 子版本号（用于同一主版本下的多次修改）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{0}
}

func (x *Version) GetMain() int64 {
	if x != nil {
		return x.Main
	}
	return 0
}

func (x *Version) GetSub() int64 {
	if x != nil {
		return x.Sub
	}
	return 0
}

// 带版本信息的键值对
type VersionedKVPair struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Key             string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value           string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Ttl             int64                  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`                                                // TTL in seconds, 0 means no expiration
	CreatedRevision int64                  `protobuf:"varint,4,opt,name=created_revision,json=createdRevision,proto3" json:"created_revision,omitempty"` // 创建版本号
	ModRevision     int64                  `protobuf:"varint,5,opt,name=mod_revision,json=modRevision,proto3" json:"mod_revision,omitempty"`             // 修改版本号
	Version         int64                  `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`                                        // 当前版本号
	Deleted         bool                   `protobuf:"varint,7,opt,name=deleted,proto3" json:"deleted,omitempty"`                                        // 是否已删除（墓碑标记）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VersionedKVPair) Reset() {
	*x = VersionedKVPair{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionedKVPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionedKVPair) ProtoMessage() {}

func (x *VersionedKVPair) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionedKVPair.ProtoReflect.Descriptor instead.
func (*VersionedKVPair) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{1}
}

func (x *VersionedKVPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *VersionedKVPair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VersionedKVPair) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *VersionedKVPair) GetCreatedRevision() int64 {
	if x != nil {
		return x.CreatedRevision
	}
	return 0
}

func (x *VersionedKVPair) GetModRevision() int64 {
	if x != nil {
		return x.ModRevision
	}
	return 0
}

func (x *VersionedKVPair) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *VersionedKVPair) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

// MVCC存储快照
type MVCCStore struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Pairs           []*VersionedKVPair     `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
	CurrentRevision int64                  `protobuf:"varint,2,opt,name=current_revision,json=currentRevision,proto3" json:"current_revision,omitempty"` // 当前版本号
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MVCCStore) Reset() {
	*x = MVCCStore{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MVCCStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MVCCStore) ProtoMessage() {}

func (x *MVCCStore) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MVCCStore.ProtoReflect.Descriptor instead.
func (*MVCCStore) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{2}
}

func (x *MVCCStore) GetPairs() []*VersionedKVPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *MVCCStore) GetCurrentRevision() int64 {
	if x != nil {
		return x.CurrentRevision
	}
	return 0
}

// 版本范围查询请求
type RangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RangeEnd      string                 `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd,proto3" json:"range_end,omitempty"`     // 范围结束键（可选）
	Revision      int64                  `protobuf:"varint,3,opt,name=revision,proto3" json:"revision,omitempty"`                    // 查询版本号，0表示最新版本
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`                          // 返回结果数量限制
	KeysOnly      bool                   `protobuf:"varint,5,opt,name=keys_only,json=keysOnly,proto3" json:"keys_only,omitempty"`    // 是否只返回键
	CountOnly     bool                   `protobuf:"varint,6,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"` // 是否只返回数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeRequest) Reset() {
	*x = RangeRequest{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeRequest) ProtoMessage() {}

func (x *RangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeRequest.ProtoReflect.Descriptor instead.
func (*RangeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{3}
}

func (x *RangeRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RangeRequest) GetRangeEnd() string {
	if x != nil {
		return x.RangeEnd
	}
	return ""
}

func (x *RangeRequest) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *RangeRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RangeRequest) GetKeysOnly() bool {
	if x != nil {
		return x.KeysOnly
	}
	return false
}

func (x *RangeRequest) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

// 版本范围查询响应
type RangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kvs           []*VersionedKVPair     `protobuf:"bytes,1,rep,name=kvs,proto3" json:"kvs,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Revision      int64                  `protobuf:"varint,3,opt,name=revision,proto3" json:"revision,omitempty"`
	More          bool                   `protobuf:"varint,4,opt,name=more,proto3" json:"more,omitempty"` // 是否还有更多结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeResponse) Reset() {
	*x = RangeResponse{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeResponse) ProtoMessage() {}

func (x *RangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeResponse.ProtoReflect.Descriptor instead.
func (*RangeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{4}
}

func (x *RangeResponse) GetKvs() []*VersionedKVPair {
	if x != nil {
		return x.Kvs
	}
	return nil
}

func (x *RangeResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RangeResponse) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *RangeResponse) GetMore() bool {
	if x != nil {
		return x.More
	}
	return false
}

// 版本历史查询请求
type HistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Revision      int64                  `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"` // 查询版本号
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`       // 返回历史版本数量限制
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryRequest) Reset() {
	*x = HistoryRequest{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryRequest) ProtoMessage() {}

func (x *HistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryRequest.ProtoReflect.Descriptor instead.
func (*HistoryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{5}
}

func (x *HistoryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HistoryRequest) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *HistoryRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 版本历史查询响应
type HistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	History       []*VersionedKVPair     `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	Revision      int64                  `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryResponse) Reset() {
	*x = HistoryResponse{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryResponse) ProtoMessage() {}

func (x *HistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryResponse.ProtoReflect.Descriptor instead.
func (*HistoryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{6}
}

func (x *HistoryResponse) GetHistory() []*VersionedKVPair {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *HistoryResponse) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

// 压缩请求
type CompactRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      int64                  `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"` // 压缩到指定版本号
	Physical      bool                   `protobuf:"varint,2,opt,name=physical,proto3" json:"physical,omitempty"` // 是否物理删除
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompactRequest) Reset() {
	*x = CompactRequest{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactRequest) ProtoMessage() {}

func (x *CompactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactRequest.ProtoReflect.Descriptor instead.
func (*CompactRequest) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{7}
}

func (x *CompactRequest) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *CompactRequest) GetPhysical() bool {
	if x != nil {
		return x.Physical
	}
	return false
}

// 压缩响应
type CompactResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      int64                  `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`   // 压缩后的版本号
	Compacted     int64                  `protobuf:"varint,2,opt,name=compacted,proto3" json:"compacted,omitempty"` // 压缩的版本数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompactResponse) Reset() {
	*x = CompactResponse{}
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactResponse) ProtoMessage() {}

func (x *CompactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_kvpb_mvcc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactResponse.ProtoReflect.Descriptor instead.
func (*CompactResponse) Descriptor() ([]byte, []int) {
	return file_pkg_kvpb_mvcc_proto_rawDescGZIP(), []int{8}
}

func (x *CompactResponse) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *CompactResponse) GetCompacted() int64 {
	if x != nil {
		return x.Compacted
	}
	return 0
}

var File_pkg_kvpb_mvcc_proto protoreflect.FileDescriptor

const file_pkg_kvpb_mvcc_proto_rawDesc = "" +
	"\n" +
	"\x13pkg/kvpb/mvcc.proto\x12\x04kvpb\"/\n" +
	"\aVersion\x12\x12\n" +
	"\x04main\x18\x01 \x01(\x03R\x04main\x12\x10\n" +
	"\x03sub\x18\x02 \x01(\x03R\x03sub\"\xcd\x01\n" +
	"\x0fVersionedKVPair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x10\n" +
	"\x03ttl\x18\x03 \x01(\x03R\x03ttl\x12)\n" +
	"\x10created_revision\x18\x04 \x01(\x03R\x0fcreatedRevision\x12!\n" +
	"\fmod_revision\x18\x05 \x01(\x03R\vmodRevision\x12\x18\n" +
	"\aversion\x18\x06 \x01(\x03R\aversion\x12\x18\n" +
	"\adeleted\x18\a \x01(\bR\adeleted\"c\n" +
	"\tMVCCStore\x12+\n" +
	"\x05pairs\x18\x01 \x03(\v2\x15.kvpb.VersionedKVPairR\x05pairs\x12)\n" +
	"\x10current_revision\x18\x02 \x01(\x03R\x0fcurrentRevision\"\xab\x01\n" +
	"\fRangeRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1b\n" +
	"\trange_end\x18\x02 \x01(\tR\brangeEnd\x12\x1a\n" +
	"\brevision\x18\x03 \x01(\x03R\brevision\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\x12\x1b\n" +
	"\tkeys_only\x18\x05 \x01(\bR\bkeysOnly\x12\x1d\n" +
	"\n" +
	"count_only\x18\x06 \x01(\bR\tcountOnly\"~\n" +
	"\rRangeResponse\x12'\n" +
	"\x03kvs\x18\x01 \x03(\v2\x15.kvpb.VersionedKVPairR\x03kvs\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\x12\x1a\n" +
	"\brevision\x18\x03 \x01(\x03R\brevision\x12\x12\n" +
	"\x04more\x18\x04 \x01(\bR\x04more\"T\n" +
	"\x0eHistoryRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1a\n" +
	"\brevision\x18\x02 \x01(\x03R\brevision\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\"^\n" +
	"\x0fHistoryResponse\x12/\n" +
	"\ahistory\x18\x01 \x03(\v2\x15.kvpb.VersionedKVPairR\ahistory\x12\x1a\n" +
	"\brevision\x18\x02 \x01(\x03R\brevision\"H\n" +
	"\x0eCompactRequest\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\x03R\brevision\x12\x1a\n" +
	"\bphysical\x18\x02 \x01(\bR\bphysical\"K\n" +
	"\x0fCompactResponse\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\x03R\brevision\x12\x1c\n" +
	"\tcompacted\x18\x02 \x01(\x03R\tcompactedB\rZ\vkv/pkg/kvpbb\x06proto3"

var (
	file_pkg_kvpb_mvcc_proto_rawDescOnce sync.Once
	file_pkg_kvpb_mvcc_proto_rawDescData []byte
)

func file_pkg_kvpb_mvcc_proto_rawDescGZIP() []byte {
	file_pkg_kvpb_mvcc_proto_rawDescOnce.Do(func() {
		file_pkg_kvpb_mvcc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_kvpb_mvcc_proto_rawDesc), len(file_pkg_kvpb_mvcc_proto_rawDesc)))
	})
	return file_pkg_kvpb_mvcc_proto_rawDescData
}

var file_pkg_kvpb_mvcc_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_kvpb_mvcc_proto_goTypes = []any{
	(*Version)(nil),         // 0: kvpb.Version
	(*VersionedKVPair)(nil), // 1: kvpb.VersionedKVPair
	(*MVCCStore)(nil),       // 2: kvpb.MVCCStore
	(*RangeRequest)(nil),    // 3: kvpb.RangeRequest
	(*RangeResponse)(nil),   // 4: kvpb.RangeResponse
	(*HistoryRequest)(nil),  // 5: kvpb.HistoryRequest
	(*HistoryResponse)(nil), // 6: kvpb.HistoryResponse
	(*CompactRequest)(nil),  // 7: kvpb.CompactRequest
	(*CompactResponse)(nil), // 8: kvpb.CompactResponse
}
var file_pkg_kvpb_mvcc_proto_depIdxs = []int32{
	1, // 0: kvpb.MVCCStore.pairs:type_name -> kvpb.VersionedKVPair
	1, // 1: kvpb.RangeResponse.kvs:type_name -> kvpb.VersionedKVPair
	1, // 2: kvpb.HistoryResponse.history:type_name -> kvpb.VersionedKVPair
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_kvpb_mvcc_proto_init() }
func file_pkg_kvpb_mvcc_proto_init() {
	if File_pkg_kvpb_mvcc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_kvpb_mvcc_proto_rawDesc), len(file_pkg_kvpb_mvcc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_kvpb_mvcc_proto_goTypes,
		DependencyIndexes: file_pkg_kvpb_mvcc_proto_depIdxs,
		MessageInfos:      file_pkg_kvpb_mvcc_proto_msgTypes,
	}.Build()
	File_pkg_kvpb_mvcc_proto = out.File
	file_pkg_kvpb_mvcc_proto_goTypes = nil
	file_pkg_kvpb_mvcc_proto_depIdxs = nil
}
